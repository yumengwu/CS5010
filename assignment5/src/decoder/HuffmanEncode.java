package decoder;

/**
 * This interface represent a HuffmanEncode interface. A HuffmanEncode could genegrate Huffman code
 * from given text, return all codes, and return original message of an encoded string.
 */
public interface HuffmanEncode {
  /**
   * This method will generate Huffman code from given text and return nothing.
   * @param string input string to generate Huffman code
   */
  void generateHuffmanCode(String string);

  /**
   * This method will return all the symbols and codes in code tree generated by
   * generateHuffmanCode. For each line, if symbol is x and code is yyy, then this line will be
   * x:yyy, with a '\n' in the end of line if this line is not the last line.
   * @return all the symbols and codes in code tree.
   */
  String allCodes();

  /**
   * This method will encode message by codes generated by generateHuffmanCode and return string
   * after encoded.
   * @param msg the string to encode
   * @return string after encoded
   */
  String encode(String msg);

  /**
   * This method will take a encoded text as string and return its original message according
   * to symbol and code from generateHuffmanCode. If input is null or empty string, or input
   * string contain characters not in code symbol set or input string cannot be decoded because
   * the code is not in code tree, this method will throw IllegalStateException.
   * @param msg input string to decode
   * @return original message of input
   */
  String decode(String msg);
}
